/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { forwardRef, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';


const Model = forwardRef(({material, position, rotation=[(Math.PI  / 2) , 0, 0], scale, onPointerOver, onPointerOut, onClick, ...props}, ref3) => {
  
  const AllRef = useRef();
  useFrame(() => {
    // AllRef.current.rotation.x += 0.03;
    AllRef.current.rotation.z += 0.01;
  });
  const { nodes, materials } = useGLTF('/star.gltf')
  return (
    <group  onClick={onClick}  onPointerOver={onPointerOver} onPointerOut={onPointerOut} ref={ref3} {...props} dispose={null}>
      <mesh rotation={rotation} ref={AllRef} position={position} geometry={nodes.New_object.geometry} material={material}  scale={scale} />
    </group>
  )
})
  
export default Model

useGLTF.preload('/star.gltf')


